name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    name: Code Quality and Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Swift
      uses: swift-actions/setup-swift@v1
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      continue-on-error: true
      run: swiftlint lint --reporter github-actions-logging
      
    - name: Cache SPM dependencies
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
      
    - name: Build and Test
      run: |
        swift package clean
        swift package resolve
        swift build -v
        swift test -v --enable-code-coverage
      
    - name: Generate Coverage Report
      run: |
        brew install lcov
        xcrun llvm-cov export -format="lcov" \
          .build/debug/AIHedgeFundPackageTests.xctest/Contents/MacOS/AIHedgeFundPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          -ignore-filename-regex="(.build|Tests)" \
          > coverage.lcov
        genhtml coverage.lcov --output-directory docs/coverage_report
        
    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs
        
  deploy-pages:
    needs: quality-checks
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
